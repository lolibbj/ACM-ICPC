#include<cstdio>
#include<cstring>
#include<algorithm>
#include<queue>
using namespace std;
const int maxn=2e5+10;

int indegree[maxn];
int n,m;
int a[maxn];
struct edges
{
    int to;
    int dis;
    int next;
};
edges edge[maxn];
int head[maxn], num;
pair<int,int>p[maxn];
void init() //初始化
{
    memset(head, -1, sizeof(head));
    num = 0;
}

void add(int from, int to, int len)
{
    edge[num].to = to;
    edge[num].dis = len;
    edge[num].next = head[from];
    head[from] = num++;
}
int topu(int x)
{
    queue<int> q;
    int cnt = 0;
    while(!q.empty())
        q.pop();
    for(int i = 1; i <= n ; i++)
        if(indegree[i] == 0)
            q.push(i);
    int u;
    while(!q.empty())
    {
        u = q.front();
        a[++cnt] = u;
        q.pop();
        for(int i = head[u]; i!=-1;i=edge[i].next)
        {
            int to=edge[i].to;
            indegree[to] --;
            if(indegree[to] == 0)
                q.push(to);
        }
    }
    //printf("%d\n",cnt);
    return cnt==n;//判断是否有环
}
int main()
{
    init();
    int u,v;
    scanf("%d %d",&n,&m);
    for(int i=1;i<=m;i++){
        int u,v;
        scanf("%d %d",&u,&v);
        indegree[v]++;
    }
    topu();
    return 0;
}
